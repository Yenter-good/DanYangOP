//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using Dos.ORM;

namespace CIS.Model
{

    /// <summary>
    /// 实体类OP_SubTemplate 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("OP_SubTemplate")]
    [Serializable]
    public partial class OP_SubTemplate : Entity
    {
        #region Model
        private string _ID;
        private string _ParentID;
        private string _UserID;
        private string _Name;
        private string _Description;
        private int? _No;
        private string _Content;
        private string _SearchCode;
        private string _SpellCode;
        private string _WubiCode;
        private int? _NodeType;
        private int? _Status;
        private string _DTLimit;
        private int? _DNLimit;
        private string _Tag;
        private string _TagName;
        private int? _TemplateType;
        /// <summary>
        /// 编号
        /// </summary>
        public string ID
        {
            get { return _ID; }
            set
            {
                this.OnPropertyValueChange(_.ID, _ID, value);
                this._ID = value;
            }
        }
        /// <summary>
        /// 父节点编号
        /// </summary>
        public string ParentID
        {
            get { return _ParentID; }
            set
            {
                this.OnPropertyValueChange(_.ParentID, _ParentID, value);
                this._ParentID = value;
            }
        }
        /// <summary>
        /// 用户编号
        /// </summary>
        public string UserID
        {
            get { return _UserID; }
            set
            {
                this.OnPropertyValueChange(_.UserID, _UserID, value);
                this._UserID = value;
            }
        }
        /// <summary>
        /// 名称
        /// </summary>
        public string Name
        {
            get { return _Name; }
            set
            {
                this.OnPropertyValueChange(_.Name, _Name, value);
                this._Name = value;
            }
        }
        /// <summary>
        /// 描述
        /// </summary>
        public string Description
        {
            get { return _Description; }
            set
            {
                this.OnPropertyValueChange(_.Description, _Description, value);
                this._Description = value;
            }
        }
        /// <summary>
        /// 排序
        /// </summary>
        public int? No
        {
            get { return _No; }
            set
            {
                this.OnPropertyValueChange(_.No, _No, value);
                this._No = value;
            }
        }
        /// <summary>
        /// 内容
        /// </summary>
        public string Content
        {
            get { return _Content; }
            set
            {
                this.OnPropertyValueChange(_.Content, _Content, value);
                this._Content = value;
            }
        }
        /// <summary>
        /// 检索码
        /// </summary>
        public string SearchCode
        {
            get { return _SearchCode; }
            set
            {
                this.OnPropertyValueChange(_.SearchCode, _SearchCode, value);
                this._SearchCode = value;
            }
        }
        /// <summary>
        /// 拼音码
        /// </summary>
        public string SpellCode
        {
            get { return _SpellCode; }
            set
            {
                this.OnPropertyValueChange(_.SpellCode, _SpellCode, value);
                this._SpellCode = value;
            }
        }
        /// <summary>
        /// 五笔码
        /// </summary>
        public string WubiCode
        {
            get { return _WubiCode; }
            set
            {
                this.OnPropertyValueChange(_.WubiCode, _WubiCode, value);
                this._WubiCode = value;
            }
        }
        /// <summary>
        /// 节点类型 0 文件夹 1 内容
        /// </summary>
        public int? NodeType
        {
            get { return _NodeType; }
            set
            {
                this.OnPropertyValueChange(_.NodeType, _NodeType, value);
                this._NodeType = value;
            }
        }
        /// <summary>
        /// 状态 0停用 1 启用 2 作废
        /// </summary>
        public int? Status
        {
            get { return _Status; }
            set
            {
                this.OnPropertyValueChange(_.Status, _Status, value);
                this._Status = value;
            }
        }
        /// <summary>
        /// 科室限制 * 代表全部  多个科室使用英式逗号分隔
        /// </summary>
        public string DTLimit
        {
            get { return _DTLimit; }
            set
            {
                this.OnPropertyValueChange(_.DTLimit, _DTLimit, value);
                this._DTLimit = value;
            }
        }
        /// <summary>
        /// 医护限制 0 无限制 1 医生专用 2 护士专用
        /// </summary>
        public int? DNLimit
        {
            get { return _DNLimit; }
            set
            {
                this.OnPropertyValueChange(_.DNLimit, _DNLimit, value);
                this._DNLimit = value;
            }
        }
        /// <summary>
        /// 特征码
        /// </summary>
        public string Tag
        {
            get { return _Tag; }
            set
            {
                this.OnPropertyValueChange(_.Tag, _Tag, value);
                this._Tag = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string TagName
        {
            get { return _TagName; }
            set
            {
                this.OnPropertyValueChange(_.TagName, _TagName, value);
                this._TagName = value;
            }
        }
        /// <summary>
        /// _1子模版  2范文节选
        /// </summary>
        public int? TemplateType
        {
            get { return _TemplateType; }
            set
            {
                this.OnPropertyValueChange(_.TemplateType, _TemplateType, value);
                this._TemplateType = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.ID};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.ID,
				_.ParentID,
				_.UserID,
				_.Name,
				_.Description,
				_.No,
				_.Content,
				_.SearchCode,
				_.SpellCode,
				_.WubiCode,
				_.NodeType,
				_.Status,
				_.DTLimit,
				_.DNLimit,
				_.Tag,
				_.TagName,
				_.TemplateType};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._ID,
				this._ParentID,
				this._UserID,
				this._Name,
				this._Description,
				this._No,
				this._Content,
				this._SearchCode,
				this._SpellCode,
				this._WubiCode,
				this._NodeType,
				this._Status,
				this._DTLimit,
				this._DNLimit,
				this._Tag,
				this._TagName,
				this._TemplateType};
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "OP_SubTemplate");
            /// <summary>
            /// 编号
            /// </summary>
            public readonly static Field ID = new Field("ID", "OP_SubTemplate", "编号");
            /// <summary>
            /// 父节点编号
            /// </summary>
            public readonly static Field ParentID = new Field("ParentID", "OP_SubTemplate", "父节点编号");
            /// <summary>
            /// 用户编号
            /// </summary>
            public readonly static Field UserID = new Field("UserID", "OP_SubTemplate", "用户编号");
            /// <summary>
            /// 名称
            /// </summary>
            public readonly static Field Name = new Field("Name", "OP_SubTemplate", "名称");
            /// <summary>
            /// 描述
            /// </summary>
            public readonly static Field Description = new Field("Description", "OP_SubTemplate", "描述");
            /// <summary>
            /// 排序
            /// </summary>
            public readonly static Field No = new Field("No", "OP_SubTemplate", "排序");
            /// <summary>
            /// 内容
            /// </summary>
            public readonly static Field Content = new Field("Content", "OP_SubTemplate", "内容");
            /// <summary>
            /// 检索码
            /// </summary>
            public readonly static Field SearchCode = new Field("SearchCode", "OP_SubTemplate", "检索码");
            /// <summary>
            /// 拼音码
            /// </summary>
            public readonly static Field SpellCode = new Field("SpellCode", "OP_SubTemplate", "拼音码");
            /// <summary>
            /// 五笔码
            /// </summary>
            public readonly static Field WubiCode = new Field("WubiCode", "OP_SubTemplate", "五笔码");
            /// <summary>
            /// 节点类型 0 文件夹 1 内容
            /// </summary>
            public readonly static Field NodeType = new Field("NodeType", "OP_SubTemplate", "节点类型 0 文件夹 1 内容");
            /// <summary>
            /// 状态 0停用 1 启用 2 作废
            /// </summary>
            public readonly static Field Status = new Field("Status", "OP_SubTemplate", "状态 0停用 1 启用 2 作废");
            /// <summary>
            /// 科室限制 * 代表全部  多个科室使用英式逗号分隔
            /// </summary>
            public readonly static Field DTLimit = new Field("DTLimit", "OP_SubTemplate", "科室限制 * 代表全部  多个科室使用英式逗号分隔");
            /// <summary>
            /// 医护限制 0 无限制 1 医生专用 2 护士专用
            /// </summary>
            public readonly static Field DNLimit = new Field("DNLimit", "OP_SubTemplate", "医护限制 0 无限制 1 医生专用 2 护士专用");
            /// <summary>
            /// 特征码
            /// </summary>
            public readonly static Field Tag = new Field("Tag", "OP_SubTemplate", "特征码");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field TagName = new Field("TagName", "OP_SubTemplate", "TagName");
            /// <summary>
            /// _1子模版  2范文节选
            /// </summary>
            public readonly static Field TemplateType = new Field("TemplateType", "OP_SubTemplate", "_1子模版  2范文节选");
        }
        #endregion


    }
}

