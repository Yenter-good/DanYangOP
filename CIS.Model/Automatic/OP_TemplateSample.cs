//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using Dos.ORM;

namespace CIS.Model
{

    /// <summary>
    /// 实体类OP_TemplateSample 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("OP_TemplateSample")]
    [Serializable]
    public partial class OP_TemplateSample : Entity
    {
        #region Model
        private string _ID;
        private string _ParentID;
        private string _SampleName;
        private string _UserID;
        private string _ChiefComplaints;
        private string _PresentIllness;
        private string _Past;
        private string _Personal;
        private string _Marrital;
        private string _Smoke;
        private string _Allergen;
        private string _Family;
        private string _PhysicalExamination;
        private string _DealWith;
        private string _ExaminationResult;
        private string _Speciality;
        private DateTime? _UpdateTime;
        private string _DeptCode;
        private int? _NodeType;
        private string _DrugAllergy;
        private string _HerbDialectic;
        private int? _Index;
        /// <summary>
        /// ID
        /// </summary>
        public string ID
        {
            get { return _ID; }
            set
            {
                this.OnPropertyValueChange(_.ID, _ID, value);
                this._ID = value;
            }
        }
        /// <summary>
        /// 父节点ID
        /// </summary>
        public string ParentID
        {
            get { return _ParentID; }
            set
            {
                this.OnPropertyValueChange(_.ParentID, _ParentID, value);
                this._ParentID = value;
            }
        }
        /// <summary>
        /// 范文名称
        /// </summary>
        public string SampleName
        {
            get { return _SampleName; }
            set
            {
                this.OnPropertyValueChange(_.SampleName, _SampleName, value);
                this._SampleName = value;
            }
        }
        /// <summary>
        /// 用户ID
        /// </summary>
        public string UserID
        {
            get { return _UserID; }
            set
            {
                this.OnPropertyValueChange(_.UserID, _UserID, value);
                this._UserID = value;
            }
        }
        /// <summary>
        /// 主诉
        /// </summary>
        public string ChiefComplaints
        {
            get { return _ChiefComplaints; }
            set
            {
                this.OnPropertyValueChange(_.ChiefComplaints, _ChiefComplaints, value);
                this._ChiefComplaints = value;
            }
        }
        /// <summary>
        /// 现病史
        /// </summary>
        public string PresentIllness
        {
            get { return _PresentIllness; }
            set
            {
                this.OnPropertyValueChange(_.PresentIllness, _PresentIllness, value);
                this._PresentIllness = value;
            }
        }
        /// <summary>
        /// 既往史
        /// </summary>
        public string Past
        {
            get { return _Past; }
            set
            {
                this.OnPropertyValueChange(_.Past, _Past, value);
                this._Past = value;
            }
        }
        /// <summary>
        /// 个人史
        /// </summary>
        public string Personal
        {
            get { return _Personal; }
            set
            {
                this.OnPropertyValueChange(_.Personal, _Personal, value);
                this._Personal = value;
            }
        }
        /// <summary>
        /// 婚育史
        /// </summary>
        public string Marrital
        {
            get { return _Marrital; }
            set
            {
                this.OnPropertyValueChange(_.Marrital, _Marrital, value);
                this._Marrital = value;
            }
        }
        /// <summary>
        /// 吸烟史
        /// </summary>
        public string Smoke
        {
            get { return _Smoke; }
            set
            {
                this.OnPropertyValueChange(_.Smoke, _Smoke, value);
                this._Smoke = value;
            }
        }
        /// <summary>
        /// 过敏史
        /// </summary>
        public string Allergen
        {
            get { return _Allergen; }
            set
            {
                this.OnPropertyValueChange(_.Allergen, _Allergen, value);
                this._Allergen = value;
            }
        }
        /// <summary>
        /// 家族史
        /// </summary>
        public string Family
        {
            get { return _Family; }
            set
            {
                this.OnPropertyValueChange(_.Family, _Family, value);
                this._Family = value;
            }
        }
        /// <summary>
        /// 体格检查
        /// </summary>
        public string PhysicalExamination
        {
            get { return _PhysicalExamination; }
            set
            {
                this.OnPropertyValueChange(_.PhysicalExamination, _PhysicalExamination, value);
                this._PhysicalExamination = value;
            }
        }
        /// <summary>
        /// 处理
        /// </summary>
        public string DealWith
        {
            get { return _DealWith; }
            set
            {
                this.OnPropertyValueChange(_.DealWith, _DealWith, value);
                this._DealWith = value;
            }
        }
        /// <summary>
        /// 检验检查结果
        /// </summary>
        public string ExaminationResult
        {
            get { return _ExaminationResult; }
            set
            {
                this.OnPropertyValueChange(_.ExaminationResult, _ExaminationResult, value);
                this._ExaminationResult = value;
            }
        }
        /// <summary>
        /// 专科检查
        /// </summary>
        public string Speciality
        {
            get { return _Speciality; }
            set
            {
                this.OnPropertyValueChange(_.Speciality, _Speciality, value);
                this._Speciality = value;
            }
        }
        /// <summary>
        /// 更新时间
        /// </summary>
        public DateTime? UpdateTime
        {
            get { return _UpdateTime; }
            set
            {
                this.OnPropertyValueChange(_.UpdateTime, _UpdateTime, value);
                this._UpdateTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string DeptCode
        {
            get { return _DeptCode; }
            set
            {
                this.OnPropertyValueChange(_.DeptCode, _DeptCode, value);
                this._DeptCode = value;
            }
        }
        /// <summary>
        /// _0文件夹1模板
        /// </summary>
        public int? NodeType
        {
            get { return _NodeType; }
            set
            {
                this.OnPropertyValueChange(_.NodeType, _NodeType, value);
                this._NodeType = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string DrugAllergy
        {
            get { return _DrugAllergy; }
            set
            {
                this.OnPropertyValueChange(_.DrugAllergy, _DrugAllergy, value);
                this._DrugAllergy = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string HerbDialectic
        {
            get { return _HerbDialectic; }
            set
            {
                this.OnPropertyValueChange(_.HerbDialectic, _HerbDialectic, value);
                this._HerbDialectic = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? Index
        {
            get { return _Index; }
            set
            {
                this.OnPropertyValueChange(_.Index, _Index, value);
                this._Index = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
                _.ID,
            };
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
                _.ID,
                _.ParentID,
                _.SampleName,
                _.UserID,
                _.ChiefComplaints,
                _.PresentIllness,
                _.Past,
                _.Personal,
                _.Marrital,
                _.Smoke,
                _.Allergen,
                _.Family,
                _.PhysicalExamination,
                _.DealWith,
                _.ExaminationResult,
                _.Speciality,
                _.UpdateTime,
                _.DeptCode,
                _.NodeType,
                _.DrugAllergy,
                _.HerbDialectic,
                _.Index,
            };
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
                this._ID,
                this._ParentID,
                this._SampleName,
                this._UserID,
                this._ChiefComplaints,
                this._PresentIllness,
                this._Past,
                this._Personal,
                this._Marrital,
                this._Smoke,
                this._Allergen,
                this._Family,
                this._PhysicalExamination,
                this._DealWith,
                this._ExaminationResult,
                this._Speciality,
                this._UpdateTime,
                this._DeptCode,
                this._NodeType,
                this._DrugAllergy,
                this._HerbDialectic,
                this._Index,
            };
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "OP_TemplateSample");
            /// <summary>
            /// ID
            /// </summary>
            public readonly static Field ID = new Field("ID", "OP_TemplateSample", "ID");
            /// <summary>
            /// 父节点ID
            /// </summary>
            public readonly static Field ParentID = new Field("ParentID", "OP_TemplateSample", "父节点ID");
            /// <summary>
            /// 范文名称
            /// </summary>
            public readonly static Field SampleName = new Field("SampleName", "OP_TemplateSample", "范文名称");
            /// <summary>
            /// 用户ID
            /// </summary>
            public readonly static Field UserID = new Field("UserID", "OP_TemplateSample", "用户ID");
            /// <summary>
            /// 主诉
            /// </summary>
            public readonly static Field ChiefComplaints = new Field("ChiefComplaints", "OP_TemplateSample", "主诉");
            /// <summary>
            /// 现病史
            /// </summary>
            public readonly static Field PresentIllness = new Field("PresentIllness", "OP_TemplateSample", "现病史");
            /// <summary>
            /// 既往史
            /// </summary>
            public readonly static Field Past = new Field("Past", "OP_TemplateSample", "既往史");
            /// <summary>
            /// 个人史
            /// </summary>
            public readonly static Field Personal = new Field("Personal", "OP_TemplateSample", "个人史");
            /// <summary>
            /// 婚育史
            /// </summary>
            public readonly static Field Marrital = new Field("Marrital", "OP_TemplateSample", "婚育史");
            /// <summary>
            /// 吸烟史
            /// </summary>
            public readonly static Field Smoke = new Field("Smoke", "OP_TemplateSample", "吸烟史");
            /// <summary>
            /// 过敏史
            /// </summary>
            public readonly static Field Allergen = new Field("Allergen", "OP_TemplateSample", "过敏史");
            /// <summary>
            /// 家族史
            /// </summary>
            public readonly static Field Family = new Field("Family", "OP_TemplateSample", "家族史");
            /// <summary>
            /// 体格检查
            /// </summary>
            public readonly static Field PhysicalExamination = new Field("PhysicalExamination", "OP_TemplateSample", "体格检查");
            /// <summary>
            /// 处理
            /// </summary>
            public readonly static Field DealWith = new Field("DealWith", "OP_TemplateSample", "处理");
            /// <summary>
            /// 检验检查结果
            /// </summary>
            public readonly static Field ExaminationResult = new Field("ExaminationResult", "OP_TemplateSample", "检验检查结果");
            /// <summary>
            /// 专科检查
            /// </summary>
            public readonly static Field Speciality = new Field("Speciality", "OP_TemplateSample", "专科检查");
            /// <summary>
            /// 更新时间
            /// </summary>
            public readonly static Field UpdateTime = new Field("UpdateTime", "OP_TemplateSample", "更新时间");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field DeptCode = new Field("DeptCode", "OP_TemplateSample", "DeptCode");
            /// <summary>
            /// _0文件夹1模板
            /// </summary>
            public readonly static Field NodeType = new Field("NodeType", "OP_TemplateSample", "_0文件夹1模板");
            /// <summary>
            /// 药敏史
            /// </summary>
            public readonly static Field DrugAllergy = new Field("DrugAllergy", "OP_TemplateSample", "药敏史");
            /// <summary>
            /// 中医辩证
            /// </summary>
            public readonly static Field HerbDialectic = new Field("HerbDialectic", "OP_TemplateSample", "中医辩证");
            /// <summary>
            /// 排序
            /// </summary>
            public readonly static Field Index = new Field("Index", "OP_TemplateSample", "排序");
        }
        #endregion


    }
}

