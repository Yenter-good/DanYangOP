//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using Dos.ORM;

namespace CIS.Model
{

    /// <summary>
    /// 实体类TP_Template 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("TP_Template")]
	[Serializable]
	public partial class TP_Template : Entity 
	{
		#region Model
		private string _ID;
		private string _DocumentID;
		private string _Name;
		private string _Caption;
		private int? _CaptionStyle;
		private int? _No;
		private int? _ShownNo;
		private string _SearchCode;
		private string _SpellCode;
		private string _WubiCode;
		private string _TagCode;
		private string _DeptLimit;
		private string _DNLimit;
		private string _DocumentContent;
		private string _Uses;
		private string _Version;
		private int? _Status;
		private string _DocumentCategory;
		private string _BusinessRange;
		private string _BusinessCategory;
		private int? _IsMultiple;
		private int? _IsRecordsSource;
		private int? _IsLeagueTogether;
		private int? _IsPage;
		/// <summary>
		/// ID
		/// </summary>
		public string ID
		{
			get{ return _ID; }
			set
			{
				this.OnPropertyValueChange(_.ID,_ID,value);
				this._ID=value;
			}
		}
		/// <summary>
		/// 模板编号
		/// </summary>
		public string DocumentID
		{
			get{ return _DocumentID; }
			set
			{
				this.OnPropertyValueChange(_.DocumentID,_DocumentID,value);
				this._DocumentID=value;
			}
		}
		/// <summary>
		/// 模板名称
		/// </summary>
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// 标题名称
		/// </summary>
		public string Caption
		{
			get{ return _Caption; }
			set
			{
				this.OnPropertyValueChange(_.Caption,_Caption,value);
				this._Caption=value;
			}
		}
		/// <summary>
		/// 标题类型
		/// </summary>
		public int? CaptionStyle
		{
			get{ return _CaptionStyle; }
			set
			{
				this.OnPropertyValueChange(_.CaptionStyle,_CaptionStyle,value);
				this._CaptionStyle=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int? No
		{
			get{ return _No; }
			set
			{
				this.OnPropertyValueChange(_.No,_No,value);
				this._No=value;
			}
		}
		/// <summary>
		/// 显示排序
		/// </summary>
		public int? ShownNo
		{
			get{ return _ShownNo; }
			set
			{
				this.OnPropertyValueChange(_.ShownNo,_ShownNo,value);
				this._ShownNo=value;
			}
		}
		/// <summary>
		/// 检索码
		/// </summary>
		public string SearchCode
		{
			get{ return _SearchCode; }
			set
			{
				this.OnPropertyValueChange(_.SearchCode,_SearchCode,value);
				this._SearchCode=value;
			}
		}
		/// <summary>
		/// 拼音码
		/// </summary>
		public string SpellCode
		{
			get{ return _SpellCode; }
			set
			{
				this.OnPropertyValueChange(_.SpellCode,_SpellCode,value);
				this._SpellCode=value;
			}
		}
		/// <summary>
		/// 五笔码
		/// </summary>
		public string WubiCode
		{
			get{ return _WubiCode; }
			set
			{
				this.OnPropertyValueChange(_.WubiCode,_WubiCode,value);
				this._WubiCode=value;
			}
		}
		/// <summary>
		/// 特征码
		/// </summary>
		public string TagCode
		{
			get{ return _TagCode; }
			set
			{
				this.OnPropertyValueChange(_.TagCode,_TagCode,value);
				this._TagCode=value;
			}
		}
		/// <summary>
		/// 科室限制
		/// </summary>
		public string DeptLimit
		{
			get{ return _DeptLimit; }
			set
			{
				this.OnPropertyValueChange(_.DeptLimit,_DeptLimit,value);
				this._DeptLimit=value;
			}
		}
		/// <summary>
		/// 医护限制 0不区分 1 医生 2护士
		/// </summary>
		public string DNLimit
		{
			get{ return _DNLimit; }
			set
			{
				this.OnPropertyValueChange(_.DNLimit,_DNLimit,value);
				this._DNLimit=value;
			}
		}
		/// <summary>
		/// 模板内容
		/// </summary>
		public string DocumentContent
		{
			get{ return _DocumentContent; }
			set
			{
				this.OnPropertyValueChange(_.DocumentContent,_DocumentContent,value);
				this._DocumentContent=value;
			}
		}
		/// <summary>
		/// 用途 病历框架模板 页眉 页脚 表单
		/// </summary>
		public string Uses
		{
			get{ return _Uses; }
			set
			{
				this.OnPropertyValueChange(_.Uses,_Uses,value);
				this._Uses=value;
			}
		}
		/// <summary>
		/// 版本号 格式 YYYYMMDD.次数(更改次数为2为数字)
		/// </summary>
		public string Version
		{
			get{ return _Version; }
			set
			{
				this.OnPropertyValueChange(_.Version,_Version,value);
				this._Version=value;
			}
		}
		/// <summary>
		/// 状态 0 停用 1 启用 2 作废
		/// </summary>
		public int? Status
		{
			get{ return _Status; }
			set
			{
				this.OnPropertyValueChange(_.Status,_Status,value);
				this._Status=value;
			}
		}
		/// <summary>
		/// 文档分类
		/// </summary>
		public string DocumentCategory
		{
			get{ return _DocumentCategory; }
			set
			{
				this.OnPropertyValueChange(_.DocumentCategory,_DocumentCategory,value);
				this._DocumentCategory=value;
			}
		}
		/// <summary>
		/// 业务范围
		/// </summary>
		public string BusinessRange
		{
			get{ return _BusinessRange; }
			set
			{
				this.OnPropertyValueChange(_.BusinessRange,_BusinessRange,value);
				this._BusinessRange=value;
			}
		}
		/// <summary>
		/// 业务分类
		/// </summary>
		public string BusinessCategory
		{
			get{ return _BusinessCategory; }
			set
			{
				this.OnPropertyValueChange(_.BusinessCategory,_BusinessCategory,value);
				this._BusinessCategory=value;
			}
		}
		/// <summary>
		/// 是否允许多份 0不允许 1允许
		/// </summary>
		public int? IsMultiple
		{
			get{ return _IsMultiple; }
			set
			{
				this.OnPropertyValueChange(_.IsMultiple,_IsMultiple,value);
				this._IsMultiple=value;
			}
		}
		/// <summary>
		/// 是否为病历源 0不是 1是
		/// </summary>
		public int? IsRecordsSource
		{
			get{ return _IsRecordsSource; }
			set
			{
				this.OnPropertyValueChange(_.IsRecordsSource,_IsRecordsSource,value);
				this._IsRecordsSource=value;
			}
		}
		/// <summary>
		/// 是否同类型合并 0不合并 1合并
		/// </summary>
		public int? IsLeagueTogether
		{
			get{ return _IsLeagueTogether; }
			set
			{
				this.OnPropertyValueChange(_.IsLeagueTogether,_IsLeagueTogether,value);
				this._IsLeagueTogether=value;
			}
		}
		/// <summary>
		/// 是否强制合并 0不合并 1合并
		/// </summary>
		public int? IsPage
		{
			get{ return _IsPage; }
			set
			{
				this.OnPropertyValueChange(_.IsPage,_IsPage,value);
				this._IsPage=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.ID,
				_.DocumentID,
				_.Name,
				_.Caption,
				_.CaptionStyle,
				_.No,
				_.ShownNo,
				_.SearchCode,
				_.SpellCode,
				_.WubiCode,
				_.TagCode,
				_.DeptLimit,
				_.DNLimit,
				_.DocumentContent,
				_.Uses,
				_.Version,
				_.Status,
				_.DocumentCategory,
				_.BusinessRange,
				_.BusinessCategory,
				_.IsMultiple,
				_.IsRecordsSource,
				_.IsLeagueTogether,
				_.IsPage};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._ID,
				this._DocumentID,
				this._Name,
				this._Caption,
				this._CaptionStyle,
				this._No,
				this._ShownNo,
				this._SearchCode,
				this._SpellCode,
				this._WubiCode,
				this._TagCode,
				this._DeptLimit,
				this._DNLimit,
				this._DocumentContent,
				this._Uses,
				this._Version,
				this._Status,
				this._DocumentCategory,
				this._BusinessRange,
				this._BusinessCategory,
				this._IsMultiple,
				this._IsRecordsSource,
				this._IsLeagueTogether,
				this._IsPage};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","TP_Template");
			/// <summary>
			/// ID
			/// </summary>
			public readonly static Field ID = new Field("ID","TP_Template","ID");
			/// <summary>
			/// 模板编号
			/// </summary>
			public readonly static Field DocumentID = new Field("DocumentID","TP_Template","模板编号");
			/// <summary>
			/// 模板名称
			/// </summary>
			public readonly static Field Name = new Field("Name","TP_Template","模板名称");
			/// <summary>
			/// 标题名称
			/// </summary>
			public readonly static Field Caption = new Field("Caption","TP_Template","标题名称");
			/// <summary>
			/// 标题类型
			/// </summary>
			public readonly static Field CaptionStyle = new Field("CaptionStyle","TP_Template","标题类型");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field No = new Field("No","TP_Template","排序");
			/// <summary>
			/// 显示排序
			/// </summary>
			public readonly static Field ShownNo = new Field("ShownNo","TP_Template","显示排序");
			/// <summary>
			/// 检索码
			/// </summary>
			public readonly static Field SearchCode = new Field("SearchCode","TP_Template","检索码");
			/// <summary>
			/// 拼音码
			/// </summary>
			public readonly static Field SpellCode = new Field("SpellCode","TP_Template","拼音码");
			/// <summary>
			/// 五笔码
			/// </summary>
			public readonly static Field WubiCode = new Field("WubiCode","TP_Template","五笔码");
			/// <summary>
			/// 特征码
			/// </summary>
			public readonly static Field TagCode = new Field("TagCode","TP_Template","特征码");
			/// <summary>
			/// 科室限制
			/// </summary>
			public readonly static Field DeptLimit = new Field("DeptLimit","TP_Template","科室限制");
			/// <summary>
			/// 医护限制 0不区分 1 医生 2护士
			/// </summary>
			public readonly static Field DNLimit = new Field("DNLimit","TP_Template","医护限制 0不区分 1 医生 2护士");
			/// <summary>
			/// 模板内容
			/// </summary>
			public readonly static Field DocumentContent = new Field("DocumentContent","TP_Template","模板内容");
			/// <summary>
			/// 用途 病历框架模板 页眉 页脚 表单
			/// </summary>
			public readonly static Field Uses = new Field("Uses","TP_Template","用途 病历框架模板 页眉 页脚 表单");
			/// <summary>
			/// 版本号 格式 YYYYMMDD.次数(更改次数为2为数字)
			/// </summary>
			public readonly static Field Version = new Field("Version","TP_Template","版本号 格式 YYYYMMDD.次数(更改次数为2为数字)");
			/// <summary>
			/// 状态 0 停用 1 启用 2 作废
			/// </summary>
			public readonly static Field Status = new Field("Status","TP_Template","状态 0 停用 1 启用 2 作废");
			/// <summary>
			/// 文档分类
			/// </summary>
			public readonly static Field DocumentCategory = new Field("DocumentCategory","TP_Template","文档分类");
			/// <summary>
			/// 业务范围
			/// </summary>
			public readonly static Field BusinessRange = new Field("BusinessRange","TP_Template","业务范围");
			/// <summary>
			/// 业务分类
			/// </summary>
			public readonly static Field BusinessCategory = new Field("BusinessCategory","TP_Template","业务分类");
			/// <summary>
			/// 是否允许多份 0不允许 1允许
			/// </summary>
			public readonly static Field IsMultiple = new Field("IsMultiple","TP_Template","是否允许多份 0不允许 1允许");
			/// <summary>
			/// 是否为病历源 0不是 1是
			/// </summary>
			public readonly static Field IsRecordsSource = new Field("IsRecordsSource","TP_Template","是否为病历源 0不是 1是");
			/// <summary>
			/// 是否同类型合并 0不合并 1合并
			/// </summary>
			public readonly static Field IsLeagueTogether = new Field("IsLeagueTogether","TP_Template","是否同类型合并 0不合并 1合并");
			/// <summary>
			/// 是否强制合并 0不合并 1合并
			/// </summary>
			public readonly static Field IsPage = new Field("IsPage","TP_Template","是否强制合并 0不合并 1合并");
		}
		#endregion


	}
}

