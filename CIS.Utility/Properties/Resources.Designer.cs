//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CIS.Utility.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CIS.Utility.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; ?&gt;
        ///&lt;ROWDATA&gt;
        ///
        ///&lt;ROW&gt;
        ///  &lt;SPELL_CODE&gt;L&lt;/SPELL_CODE&gt;
        ///  &lt;WB_CODE&gt;X&lt;/WB_CODE&gt;
        ///  &lt;NAME&gt;缭&lt;/NAME&gt;
        ///  &lt;SPELL_ALL&gt;LIAO&lt;/SPELL_ALL&gt;
        ///  &lt;TONE&gt;&lt;/TONE&gt;
        ///&lt;/ROW&gt;
        ///
        ///&lt;ROW&gt;
        ///  &lt;SPELL_CODE&gt;Z&lt;/SPELL_CODE&gt;
        ///  &lt;WB_CODE&gt;X&lt;/WB_CODE&gt;
        ///  &lt;NAME&gt;缯&lt;/NAME&gt;
        ///  &lt;SPELL_ALL&gt;ZENG&lt;/SPELL_ALL&gt;
        ///  &lt;TONE&gt;&lt;/TONE&gt;
        ///&lt;/ROW&gt;
        ///
        ///&lt;ROW&gt;
        ///  &lt;SPELL_CODE&gt;Q&lt;/SPELL_CODE&gt;
        ///  &lt;WB_CODE&gt;X&lt;/WB_CODE&gt;
        ///  &lt;NAME&gt;缱&lt;/NAME&gt;
        ///  &lt;SPELL_ALL&gt;QIAN&lt;/SPELL_ALL&gt;
        ///  &lt;TONE&gt;&lt;/TONE&gt;
        ///&lt;/ROW&gt;
        ///
        ///&lt;ROW&gt;
        ///  &lt;SPELL_CODE&gt;H&lt;/SPELL_CODE&gt;
        ///  &lt;WB_CODE&gt;X&lt;/WB_CODE&gt;
        ///  &lt; [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SPELL1 {
            get {
                return ResourceManager.GetString("SPELL1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap 加载动画 {
            get {
                object obj = ResourceManager.GetObject("加载动画", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
